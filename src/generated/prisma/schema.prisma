// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Country {
  id        Int                    @id @default(autoincrement())
  name      String
  code      String                 @unique
  medicines MedicineAvailability[]
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt
}

model Symptom {
  id              Int                     @id @default(autoincrement())
  descriptionEn   String
  descriptionEs   String
  recommendations SymptomRecommendation[]
  createdAt       DateTime                @default(now())
  updatedAt       DateTime                @updatedAt
}

model Medicine {
  id                  Int                     @id @default(autoincrement())
  nameEn              String
  nameEs              String
  descriptionEn       String
  descriptionEs       String
  instructionsEn      String
  instructionsEs      String
  contraindicationsEn String
  contraindicationsEs String
  availability        MedicineAvailability[]
  recommendations     SymptomRecommendation[]
  createdAt           DateTime                @default(now())
  updatedAt           DateTime                @updatedAt
}

model MedicineAvailability {
  id         Int      @id @default(autoincrement())
  medicine   Medicine @relation(fields: [medicineId], references: [id])
  medicineId Int
  country    Country  @relation(fields: [countryId], references: [id])
  countryId  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([medicineId, countryId])
}

model SymptomRecommendation {
  id         Int      @id @default(autoincrement())
  symptom    Symptom  @relation(fields: [symptomId], references: [id])
  symptomId  Int
  medicine   Medicine @relation(fields: [medicineId], references: [id])
  medicineId Int
  priority   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([symptomId, medicineId])
}

model ConsultationHistory {
  id                 Int      @id @default(autoincrement())
  selectedSymptoms   String // JSON string of symptom IDs
  age                Int?
  isPregnant         Boolean?
  allergies          String? // JSON string of allergies
  currentMedications String? // JSON string of current medications
  recommendations    String // JSON string of recommended medicines
  language           String // 'en' or 'es'
  countryCode        String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
